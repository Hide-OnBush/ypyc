<template>
  <div id="container"> </div>
  
</template>

<script setup lang="ts" >
import { onBeforeMount, onMounted, ref } from 'vue';
import axios from "axios";
import AMapLoader from '@amap/amap-jsapi-loader';
import delCustomers1 from '@/views/SimulatorComponent.vue'


let path1 = ref([]);
let path2 = ref([]);
let path3 = ref([]);
let path4 = ref([]);
let path5 = ref([]);
// let paths:any = [path1, path2, path3, path4, path5]
// function clearPaths(paths) {
//   for (let index = 0; index < paths.length; index++) {
//     paths[index].value = [];
//   }
// }

let weekday = "周一"
const value = ref('')//客户经理value
const company = {
  Lng: 121.525144, Lat: 31.29509
}

  {% comment %}
    <script
      type="text/javascript"
      src="https://webapi.amap.com/maps?v=2.0&key=97faaa07fd10db3b317137503de756ed&plugin=AMap.Riding"
    ></script>
    <link
      rel="stylesheet"
      href="https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css"
    />
    <script type="text/javascript">
      window._AMapSecurityConfig = {
          securityJsCode:'f34a1b5883370338b00da4fecfea5fa9',
      } {% endcomment %}
//处理地图原始渲染，此处必须加key
function initMap() {

  AMapLoader.load({
    key: "97faaa07fd10db3b317137503de756ed",             // 申请好的Web端开发者Key，首次调用 load 时必填
    version: "2.0",      // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15
    plugins: ['AMap.Scale', "AMap.ToolBar","AMap.Driving"],       // 需要使用的的插件列表，如比例尺'AMap.Scale'等
  })
    .then((AMap) => {
      console.log("初始化绘制");
      const map = new AMap.Map("container", {  //设置地图容器id
        // mapStyle: 'amap://styles/darkblue',
        viewMode: "3D",    //是否为3D地图模式
        zoom: 13,           //初始化地图级别
        center: [121.530682, 31.297311], //初始化地图中心点位置

      });

      map.setDefaultCursor("pointer"); //使用CSS默认样式定义地图上的鼠标样式（default/pointer/move/crosshair）
      map.addControl(new AMap.Scale()); //异步同时加载多个插件
      map.addControl(new AMap.ToolBar());
      // map.addControl(new AMap.Geolocation());

      const riding = new AMap.Driving({
     map: map,
        panel: "panel"
      }); 

      var startPoint = new AMap.LngLat(121.536341, 31.324918);
     var endPoint = new AMap.LngLat(121.513853, 31.300252);
     var waypoints = [
     new AMap.LngLat(121.502486, 31.294841),  // 途径点1的经纬度
     new AMap.LngLat(121.503676, 31.293989),  // 途径点2的经纬度




    // 可以添加更多途径点...
  ];
    riding.search(startPoint, endPoint, { waypoints: waypoints }, function (status, result) {
    if (status === 'complete') {
      var path = result.routes[0].steps;
      var polyline = new AMap.Polyline({
        map: map,
        path: path,
        strokeColor: "#3366FF",
        strokeWeight: 5
      }
      ) ;  map.add(polyline);
    } else {
      console.log(result);
      
      console.log('获取导航路径失败');
    }
  });

   
   
    }).catch(e => {
      console.log(e);
    })
}


// function get_path(path: any, cusArray: any) {
//   path.value.length = 1
//   for (let index = 0; index < cusArray.value.length; index++) {
//     path.value.push(new AMap.LngLat(cusArray.value[index].Visit[0].经营地址的经度, cusArray.value[index].Visit[0].经营地址的纬度));
//   }
//   path.value.push(new AMap.LngLat(121.525144, 31.29509))
//   console.log(path.value);


// }
//处理地图更新


//生命周期函数
onBeforeMount(() => {

})
onMounted(() => {

  initMap()
  // get_path(path1, delCustomers1)
})




</script>
<style lang="scss">
#container {
  padding: 0px;
  margin: 0px;
  height: 85vh;
  width: auto;
}
</style>